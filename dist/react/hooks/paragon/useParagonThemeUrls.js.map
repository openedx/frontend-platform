{"version":3,"file":"useParagonThemeUrls.js","names":["useMemo","fallbackThemeUrl","handleVersionSubstitution","isEmptyObject","useParagonThemeUrls","config","_paragonThemeUrls$cor","_paragonThemeUrls$cor2","_paragonThemeUrls$cor3","_PARAGON_THEME","_PARAGON_THEME2","PARAGON_THEME_URLS","undefined","paragonThemeUrls","paragonCoreCssUrl","_typeof","core","urls","url","brandCoreCssUrl","brandOverride","defaultThemeVariants","defaults","localParagonVersion","PARAGON_THEME","paragon","version","localBrandVersion","brand","coreCss","wildcardKeyword","localVersion","themeVariantsCss","themeVariantsEntries","Object","entries","variants","forEach","_ref","_ref2","_slicedToArray","themeVariant","_ref2$","themeVariantMetadata","_PARAGON_THEME$parago","_PARAGON_THEME$parago2","localCoreUrl","themeUrls","localThemeVariants","fileName","_ref4","_ref5","_ref3","rest","_objectWithoutProperties","_excluded","_objectSpread"],"sources":["../../../../src/react/hooks/paragon/useParagonThemeUrls.js"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { fallbackThemeUrl, handleVersionSubstitution, isEmptyObject } from './utils';\n\n/**\n * Returns an object containing the URLs for the theme's core CSS and any theme variants.\n *\n * @param {*} config\n * @returns {ParagonThemeUrls|undefined} An object containing the URLs for the theme's core CSS and any theme variants.\n */\nconst useParagonThemeUrls = (config) => useMemo(() => {\n  if (!config?.PARAGON_THEME_URLS) {\n    return undefined;\n  }\n  const paragonThemeUrls = config.PARAGON_THEME_URLS;\n  const paragonCoreCssUrl = typeof paragonThemeUrls?.core?.urls === 'object' ? paragonThemeUrls.core.urls.default : paragonThemeUrls?.core?.url;\n  const brandCoreCssUrl = typeof paragonThemeUrls?.core?.urls === 'object' ? paragonThemeUrls.core.urls.brandOverride : undefined;\n  const defaultThemeVariants = paragonThemeUrls.defaults;\n\n  // Local versions of @openedx/paragon and @edx/brand\n  const localParagonVersion = PARAGON_THEME?.paragon?.version;\n  const localBrandVersion = PARAGON_THEME?.brand?.version;\n\n  const coreCss = {\n    default: handleVersionSubstitution({ url: paragonCoreCssUrl, wildcardKeyword: '$paragonVersion', localVersion: localParagonVersion }),\n    brandOverride: handleVersionSubstitution({ url: brandCoreCssUrl, wildcardKeyword: '$brandVersion', localVersion: localBrandVersion }),\n  };\n  const themeVariantsCss = {};\n  const themeVariantsEntries = Object.entries(paragonThemeUrls.variants || {});\n  themeVariantsEntries.forEach(([themeVariant, { url, urls }]) => {\n    const themeVariantMetadata = { urls: null };\n    if (url) {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n      };\n    } else {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url: urls.default,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n        brandOverride: handleVersionSubstitution({\n          url: urls.brandOverride,\n          wildcardKeyword: '$brandVersion',\n          localVersion: localBrandVersion,\n        }),\n      };\n    }\n    themeVariantsCss[themeVariant] = themeVariantMetadata;\n  });\n\n  // If we don't have  the core default or any theme variants, use the PARAGON_THEME\n  if (!coreCss.default || isEmptyObject(themeVariantsCss)) {\n    const localCoreUrl = PARAGON_THEME.paragon?.themeUrls?.core;\n    const localThemeVariants = PARAGON_THEME.paragon?.themeUrls?.variants;\n\n    if (isEmptyObject(localCoreUrl) || isEmptyObject(localThemeVariants)) {\n      return undefined;\n    }\n    if (!coreCss.default) {\n      coreCss.default = fallbackThemeUrl(localCoreUrl?.fileName);\n    }\n\n    if (isEmptyObject(themeVariantsCss)) {\n      Object.entries(localThemeVariants).forEach(([themeVariant, { fileName, ...rest }]) => {\n        themeVariantsCss[themeVariant] = {\n          urls: { default: fallbackThemeUrl(fileName), ...rest.urls },\n        };\n      });\n    }\n    return {\n      core: { urls: coreCss },\n      defaults: defaultThemeVariants,\n      variants: themeVariantsCss,\n    };\n  }\n\n  return {\n    core: { urls: coreCss },\n    defaults: defaultThemeVariants,\n    variants: themeVariantsCss,\n  };\n}, [config?.PARAGON_THEME_URLS]);\n\nexport default useParagonThemeUrls;\n"],"mappings":"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","ignoreList":[]}