{"version":3,"file":"useParagonThemeUrls.js","names":["useMemo","handleVersionSubstitution","useParagonThemeUrls","config","_PARAGON_THEME","_PARAGON_THEME2","PARAGON_THEME_URLS","undefined","paragonThemeUrls","paragonCoreCssUrl","_typeof","core","urls","url","brandCoreCssUrl","brandOverride","defaultThemeVariants","defaults","localParagonVersion","PARAGON_THEME","paragon","version","localBrandVersion","brand","coreCss","wildcardKeyword","localVersion","themeVariantsCss","themeVariantsEntries","Object","entries","variants","forEach","_ref","_ref2","_slicedToArray","themeVariant","_ref2$","themeVariantMetadata","hasMissingCssUrls","keys","length","_window$location","themeVariants","baseUrl","BASE_URL","window","location","origin","prependBaseUrl","concat","_ref4","_ref5","_ref3","fileName","rest","_objectWithoutProperties","_excluded","_objectSpread"],"sources":["../../../../src/react/hooks/paragon/useParagonThemeUrls.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { handleVersionSubstitution } from './utils';\n\n/**\n * Returns an object containing the URLs for the theme's core CSS and any theme variants.\n *\n * @param {*} config\n * @returns {ParagonThemeUrls|undefined} An object containing the URLs for the theme's core CSS and any theme variants.\n */\nconst useParagonThemeUrls = (config) => useMemo(() => {\n  if (!config?.PARAGON_THEME_URLS) {\n    return undefined;\n  }\n  const paragonThemeUrls = config.PARAGON_THEME_URLS;\n  const paragonCoreCssUrl = typeof paragonThemeUrls.core.urls === 'object' ? paragonThemeUrls.core.urls.default : paragonThemeUrls.core.url;\n  const brandCoreCssUrl = typeof paragonThemeUrls.core.urls === 'object' ? paragonThemeUrls.core.urls.brandOverride : undefined;\n  const defaultThemeVariants = paragonThemeUrls.defaults;\n\n  // Local versions of @openedx/paragon and @edx/brand\n  const localParagonVersion = PARAGON_THEME?.paragon?.version;\n  const localBrandVersion = PARAGON_THEME?.brand?.version;\n\n  const coreCss = {\n    default: handleVersionSubstitution({ url: paragonCoreCssUrl, wildcardKeyword: '$paragonVersion', localVersion: localParagonVersion }),\n    brandOverride: handleVersionSubstitution({ url: brandCoreCssUrl, wildcardKeyword: '$brandVersion', localVersion: localBrandVersion }),\n  };\n\n  const themeVariantsCss = {};\n  const themeVariantsEntries = Object.entries(paragonThemeUrls.variants || {});\n  themeVariantsEntries.forEach(([themeVariant, { url, urls }]) => {\n    const themeVariantMetadata = { urls: null };\n    if (url) {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n      };\n    } else {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url: urls.default,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n        brandOverride: handleVersionSubstitution({\n          url: urls.brandOverride,\n          wildcardKeyword: '$brandVersion',\n          localVersion: localBrandVersion,\n        }),\n      };\n    }\n    themeVariantsCss[themeVariant] = themeVariantMetadata;\n  });\n\n  const hasMissingCssUrls = !coreCss.default || Object.keys(themeVariantsCss).length === 0;\n  if (hasMissingCssUrls) {\n    if (!PARAGON_THEME) {\n      return undefined;\n    }\n    const themeVariants = {};\n    const baseUrl = config.BASE_URL || window.location?.origin;\n    const prependBaseUrl = (url) => `${baseUrl}/${url}`;\n    themeVariantsEntries.forEach(([themeVariant, { fileName, ...rest }]) => {\n      themeVariants[themeVariant] = {\n        url: prependBaseUrl(fileName),\n        ...rest,\n      };\n    });\n    return {\n      core: { urls: coreCss },\n      defaults: defaultThemeVariants,\n      variants: themeVariants,\n    };\n  }\n\n  return {\n    core: { urls: coreCss },\n    defaults: defaultThemeVariants,\n    variants: themeVariantsCss,\n  };\n}, [config?.BASE_URL, config?.PARAGON_THEME_URLS]);\n\nexport default useParagonThemeUrls;\n"],"mappings":"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","ignoreList":[]}