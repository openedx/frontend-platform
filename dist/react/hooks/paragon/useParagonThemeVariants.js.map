{"version":3,"file":"useParagonThemeVariants.js","names":["useEffect","useState","logError","logInfo","fallbackThemeUrl","removeExistingLinks","useParagonThemeVariants","_ref","themeVariants","currentThemeVariant","onLoad","onDarkModeSystemPreferenceChange","_useState","_useState2","_slicedToArray","isParagonThemeVariantLoaded","setIsParagonThemeVariantLoaded","_useState3","_useState4","isBrandThemeVariantLoaded","setIsBrandThemeVariantLoaded","_window$matchMedia","_window","someFn","colorSchemeQuery","matches","window","matchMedia","call","addEventListener","removeEventListener","htmlDataThemeVariantAttr","document","querySelector","setAttribute","removeAttribute","generateStylesheetRelAttr","themeVariant","Object","entries","forEach","_ref2","_ref3","value","urls","getParagonThemeVariantLink","head","concat","existingThemeVariantLink","existingThemeVariantBrandLink","brandOverride","getExistingThemeVariantLinks","isBrandOverride","themeVariantLinkSelector","querySelectorAll","createThemeVariantLink","url","_ref4","arguments","length","undefined","_ref4$isFallbackTheme","isFallbackThemeUrl","_ref4$isBrandOverride","themeVariantLink","createElement","href","rel","dataset","brandThemeVariant","paragonThemeVariant","onload","onerror","_PARAGON_THEME$parago","_PARAGON_THEME","otherExistingLinks","paragonThemeAccessor","themeUrls","PARAGON_THEME","variants","themeVariantFallbackUrl","fileName","foundParagonThemeVariantLink","insertAdjacentElement","insertBrandThemeVariantLink","updatedStylesheetRel","brandThemeVariantLink","paragonThemeVariantLink"],"sources":["../../../../src/react/hooks/paragon/useParagonThemeVariants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { logError, logInfo } from '../../../logging';\n\nimport { fallbackThemeUrl, removeExistingLinks } from './utils';\n\n/**\n * Adds/updates a `<link>` element in the HTML document to load each theme variant's CSS, setting the\n * non-current theme variants as \"alternate\" stylesheets. That is, the browser will still download\n * the CSS for the non-current theme variants, but at a lower priority than the current theme\n * variant's CSS. This ensures that if the theme variant is changed at runtime, the CSS for the new\n * theme variant will already be loaded.\n *\n * @memberof module:React\n * @param {object} args\n * @param {object} [args.themeVariants] An object containing the URLs for each supported theme variant, e.g.: `{ light: { url: 'https://path/to/light.css' } }`.\n * @param {string} [args.currentThemeVariant] The currently applied theme variant, e.g.: `light`.\n * @param {string} args.onLoad A callback function called when the theme variant(s) CSS is loaded.\n */\nconst useParagonThemeVariants = ({\n  themeVariants,\n  currentThemeVariant,\n  onLoad,\n  onDarkModeSystemPreferenceChange,\n}) => {\n  const [isParagonThemeVariantLoaded, setIsParagonThemeVariantLoaded] = useState(false);\n  const [isBrandThemeVariantLoaded, setIsBrandThemeVariantLoaded] = useState(false);\n\n  useEffect(() => {\n    const someFn = (colorSchemeQuery) => {\n      onDarkModeSystemPreferenceChange(colorSchemeQuery.matches);\n    };\n    const colorSchemeQuery = window.matchMedia?.('(prefers-color-scheme: dark)');\n    if (colorSchemeQuery) {\n      colorSchemeQuery.addEventListener('change', someFn);\n    }\n    return () => {\n      if (colorSchemeQuery) {\n        colorSchemeQuery.removeEventListener('change', someFn);\n      }\n    };\n  }, [onDarkModeSystemPreferenceChange]);\n\n  useEffect(() => {\n    if (currentThemeVariant && themeVariants?.[currentThemeVariant]) {\n      const htmlDataThemeVariantAttr = 'data-paragon-theme-variant';\n      document.querySelector('html').setAttribute(htmlDataThemeVariantAttr, currentThemeVariant);\n      return () => {\n        document.querySelector('html').removeAttribute(htmlDataThemeVariantAttr);\n      };\n    }\n    return () => {}; // no-op\n  }, [themeVariants, currentThemeVariant]);\n\n  useEffect(() => {\n    // Call `onLoad` once both the paragon and brand theme variant are loaded.\n    if (isParagonThemeVariantLoaded && isBrandThemeVariantLoaded) {\n      onLoad();\n    }\n  }, [isParagonThemeVariantLoaded, isBrandThemeVariantLoaded, onLoad]);\n\n  useEffect(() => {\n    if (!themeVariants) {\n      return;\n    }\n\n    /**\n     * Determines the value for the `rel` attribute for a given theme variant based\n     * on if its the currently applied variant.\n     */\n    const generateStylesheetRelAttr = (themeVariant) => (currentThemeVariant === themeVariant ? 'stylesheet' : 'alternate stylesheet');\n\n    // Iterate over each theme variant URL and inject it into the HTML document, if it doesn't already exist.\n    Object.entries(themeVariants).forEach(([themeVariant, value]) => {\n      // If there is no config for the theme variant URL, set the theme variant to loaded and continue.\n      if (!value.urls) {\n        setIsParagonThemeVariantLoaded(true);\n        setIsBrandThemeVariantLoaded(true);\n        return;\n      }\n      const getParagonThemeVariantLink = () => document.head.querySelector(`link[data-paragon-theme-variant='${themeVariant}']`);\n      const existingThemeVariantLink = document.head.querySelector(`link[href='${value.urls.default}']`);\n      const existingThemeVariantBrandLink = document.head.querySelector(`link[href='${value.urls.brandOverride}']`);\n\n      const getExistingThemeVariantLinks = (isBrandOverride) => {\n        const themeVariantLinkSelector = `link[data-${isBrandOverride ? 'brand' : 'paragon'}-theme-variant='${themeVariant}']`;\n        return document.head.querySelectorAll(themeVariantLinkSelector);\n      };\n\n      const createThemeVariantLink = (\n        url,\n        {\n          isFallbackThemeUrl = false,\n          isBrandOverride = false,\n        } = {},\n      ) => {\n        let themeVariantLink = document.createElement('link');\n        themeVariantLink.href = url;\n        themeVariantLink.rel = generateStylesheetRelAttr(themeVariant);\n        if (isBrandOverride) {\n          themeVariantLink.dataset.brandThemeVariant = themeVariant;\n        } else {\n          themeVariantLink.dataset.paragonThemeVariant = themeVariant;\n        }\n\n        themeVariantLink.onload = () => {\n          if (themeVariant === currentThemeVariant) {\n            if (isBrandOverride) {\n              setIsBrandThemeVariantLoaded(true);\n            } else {\n              setIsParagonThemeVariantLoaded(true);\n            }\n          }\n        };\n\n        themeVariantLink.onerror = () => {\n          logError(`Failed to load theme variant (${themeVariant}) CSS from ${value.urls.default}`);\n          if (isFallbackThemeUrl) {\n            logError(`Could not load theme variant (${themeVariant}) CSS from fallback URL. Aborting.`);\n            if (isBrandOverride) {\n              setIsBrandThemeVariantLoaded(true);\n            } else {\n              setIsParagonThemeVariantLoaded(true);\n            }\n            const otherExistingLinks = getExistingThemeVariantLinks(isBrandOverride);\n            removeExistingLinks(otherExistingLinks);\n            return;\n          }\n          const paragonThemeAccessor = isBrandOverride ? 'brand' : 'paragon';\n          const themeUrls = PARAGON_THEME?.[paragonThemeAccessor]?.themeUrls ?? {};\n          if (themeUrls.variants && themeUrls.variants[themeVariant]) {\n            const themeVariantFallbackUrl = fallbackThemeUrl(themeUrls.variants[themeVariant].fileName);\n            logInfo(`Falling back to locally installed theme variant (${themeVariant}) CSS: ${themeVariantFallbackUrl}`);\n            themeVariantLink = createThemeVariantLink(themeVariantFallbackUrl, {\n              isFallbackThemeUrl: true,\n              isBrandOverride,\n            });\n            const otherExistingLinks = getExistingThemeVariantLinks(isBrandOverride);\n            removeExistingLinks(otherExistingLinks);\n            const foundParagonThemeVariantLink = getParagonThemeVariantLink();\n            if (foundParagonThemeVariantLink) {\n              foundParagonThemeVariantLink.insertAdjacentElement(\n                'afterend',\n                themeVariantLink,\n              );\n            } else {\n              document.head.insertAdjacentElement(\n                'afterbegin',\n                themeVariantLink,\n              );\n            }\n          } else {\n            logError(`Failed to load theme variant (${themeVariant}) CSS from ${url} and locally installed fallback URL is not available. Aborting.`);\n            if (isBrandOverride) {\n              setIsBrandThemeVariantLoaded(true);\n            } else {\n              setIsParagonThemeVariantLoaded(true);\n            }\n          }\n        };\n        return themeVariantLink;\n      };\n\n      const insertBrandThemeVariantLink = () => {\n        const updatedStylesheetRel = generateStylesheetRelAttr(themeVariant);\n\n        if (existingThemeVariantBrandLink) {\n          existingThemeVariantBrandLink.rel = updatedStylesheetRel;\n          existingThemeVariantBrandLink.removeAttribute('as');\n          existingThemeVariantBrandLink.dataset.brandThemeVariant = themeVariant;\n          return;\n        }\n\n        if (value.urls.brandOverride) {\n          const brandThemeVariantLink = createThemeVariantLink(value.urls.brandOverride, { isBrandOverride: true });\n          const foundParagonThemeVariantLink = getParagonThemeVariantLink();\n          if (foundParagonThemeVariantLink) {\n            foundParagonThemeVariantLink.insertAdjacentElement(\n              'afterend',\n              brandThemeVariantLink,\n            );\n          } else {\n            document.head.insertAdjacentElement(\n              'afterbegin',\n              brandThemeVariantLink,\n            );\n          }\n        }\n        setIsBrandThemeVariantLoaded(true);\n      };\n\n      if (!existingThemeVariantLink) {\n        const paragonThemeVariantLink = createThemeVariantLink(value.urls.default);\n        document.head.insertAdjacentElement(\n          'afterbegin',\n          paragonThemeVariantLink,\n        );\n        insertBrandThemeVariantLink(existingThemeVariantBrandLink);\n      } else {\n        const updatedStylesheetRel = generateStylesheetRelAttr(themeVariant);\n        existingThemeVariantLink.rel = updatedStylesheetRel;\n        existingThemeVariantLink.removeAttribute('as');\n        existingThemeVariantLink.dataset.paragonThemeVariant = themeVariant;\n        insertBrandThemeVariantLink(existingThemeVariantBrandLink);\n      }\n      setIsParagonThemeVariantLoaded(true);\n      setIsBrandThemeVariantLoaded(true);\n    });\n  }, [themeVariants, currentThemeVariant, onLoad]);\n};\n\nexport default useParagonThemeVariants;\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,QAAQ,EAAEC,OAAO,QAAQ,kBAAkB;AAEpD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,SAAS;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAAC,IAAA,EAKvB;EAAA,IAJJC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IACbC,mBAAmB,GAAAF,IAAA,CAAnBE,mBAAmB;IACnBC,MAAM,GAAAH,IAAA,CAANG,MAAM;IACNC,gCAAgC,GAAAJ,IAAA,CAAhCI,gCAAgC;EAEhC,IAAAC,SAAA,GAAsEX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9EG,2BAA2B,GAAAF,UAAA;IAAEG,8BAA8B,GAAAH,UAAA;EAClE,IAAAI,UAAA,GAAkEhB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1EE,yBAAyB,GAAAD,UAAA;IAAEE,4BAA4B,GAAAF,UAAA;EAE9DlB,SAAS,CAAC,YAAM;IAAA,IAAAqB,kBAAA,EAAAC,OAAA;IACd,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,gBAAgB,EAAK;MACnCb,gCAAgC,CAACa,gBAAgB,CAACC,OAAO,CAAC;IAC5D,CAAC;IACD,IAAMD,gBAAgB,IAAAH,kBAAA,GAAG,CAAAC,OAAA,GAAAI,MAAM,EAACC,UAAU,cAAAN,kBAAA,uBAAjBA,kBAAA,CAAAO,IAAA,CAAAN,OAAA,EAAoB,8BAA8B,CAAC;IAC5E,IAAIE,gBAAgB,EAAE;MACpBA,gBAAgB,CAACK,gBAAgB,CAAC,QAAQ,EAAEN,MAAM,CAAC;IACrD;IACA,OAAO,YAAM;MACX,IAAIC,gBAAgB,EAAE;QACpBA,gBAAgB,CAACM,mBAAmB,CAAC,QAAQ,EAAEP,MAAM,CAAC;MACxD;IACF,CAAC;EACH,CAAC,EAAE,CAACZ,gCAAgC,CAAC,CAAC;EAEtCX,SAAS,CAAC,YAAM;IACd,IAAIS,mBAAmB,IAAID,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAGC,mBAAmB,CAAC,EAAE;MAC/D,IAAMsB,wBAAwB,GAAG,4BAA4B;MAC7DC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,YAAY,CAACH,wBAAwB,EAAEtB,mBAAmB,CAAC;MAC1F,OAAO,YAAM;QACXuB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACE,eAAe,CAACJ,wBAAwB,CAAC;MAC1E,CAAC;IACH;IACA,OAAO,YAAM,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACvB,aAAa,EAAEC,mBAAmB,CAAC,CAAC;EAExCT,SAAS,CAAC,YAAM;IACd;IACA,IAAIe,2BAA2B,IAAII,yBAAyB,EAAE;MAC5DT,MAAM,CAAC,CAAC;IACV;EACF,CAAC,EAAE,CAACK,2BAA2B,EAAEI,yBAAyB,EAAET,MAAM,CAAC,CAAC;EAEpEV,SAAS,CAAC,YAAM;IACd,IAAI,CAACQ,aAAa,EAAE;MAClB;IACF;;IAEA;AACJ;AACA;AACA;IACI,IAAM4B,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIC,YAAY;MAAA,OAAM5B,mBAAmB,KAAK4B,YAAY,GAAG,YAAY,GAAG,sBAAsB;IAAA,CAAC;;IAElI;IACAC,MAAM,CAACC,OAAO,CAAC/B,aAAa,CAAC,CAACgC,OAAO,CAAC,UAAAC,KAAA,EAA2B;MAAA,IAAAC,KAAA,GAAA5B,cAAA,CAAA2B,KAAA;QAAzBJ,YAAY,GAAAK,KAAA;QAAEC,KAAK,GAAAD,KAAA;MACzD;MACA,IAAI,CAACC,KAAK,CAACC,IAAI,EAAE;QACf5B,8BAA8B,CAAC,IAAI,CAAC;QACpCI,4BAA4B,CAAC,IAAI,CAAC;QAClC;MACF;MACA,IAAMyB,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA;QAAA,OAASb,QAAQ,CAACc,IAAI,CAACb,aAAa,qCAAAc,MAAA,CAAqCV,YAAY,OAAI,CAAC;MAAA;MAC1H,IAAMW,wBAAwB,GAAGhB,QAAQ,CAACc,IAAI,CAACb,aAAa,eAAAc,MAAA,CAAeJ,KAAK,CAACC,IAAI,WAAQ,OAAI,CAAC;MAClG,IAAMK,6BAA6B,GAAGjB,QAAQ,CAACc,IAAI,CAACb,aAAa,eAAAc,MAAA,CAAeJ,KAAK,CAACC,IAAI,CAACM,aAAa,OAAI,CAAC;MAE7G,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAIC,eAAe,EAAK;QACxD,IAAMC,wBAAwB,gBAAAN,MAAA,CAAgBK,eAAe,GAAG,OAAO,GAAG,SAAS,sBAAAL,MAAA,CAAmBV,YAAY,OAAI;QACtH,OAAOL,QAAQ,CAACc,IAAI,CAACQ,gBAAgB,CAACD,wBAAwB,CAAC;MACjE,CAAC;MAED,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAC1BC,GAAG,EAKA;QAAA,IAAAC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADC,CAAC,CAAC;UAAAG,qBAAA,GAAAJ,KAAA,CAFJK,kBAAkB;UAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;UAAAE,qBAAA,GAAAN,KAAA,CAC1BL,eAAe;UAAfA,eAAe,GAAAW,qBAAA,cAAG,KAAK,GAAAA,qBAAA;QAGzB,IAAIC,gBAAgB,GAAGhC,QAAQ,CAACiC,aAAa,CAAC,MAAM,CAAC;QACrDD,gBAAgB,CAACE,IAAI,GAAGV,GAAG;QAC3BQ,gBAAgB,CAACG,GAAG,GAAG/B,yBAAyB,CAACC,YAAY,CAAC;QAC9D,IAAIe,eAAe,EAAE;UACnBY,gBAAgB,CAACI,OAAO,CAACC,iBAAiB,GAAGhC,YAAY;QAC3D,CAAC,MAAM;UACL2B,gBAAgB,CAACI,OAAO,CAACE,mBAAmB,GAAGjC,YAAY;QAC7D;QAEA2B,gBAAgB,CAACO,MAAM,GAAG,YAAM;UAC9B,IAAIlC,YAAY,KAAK5B,mBAAmB,EAAE;YACxC,IAAI2C,eAAe,EAAE;cACnBhC,4BAA4B,CAAC,IAAI,CAAC;YACpC,CAAC,MAAM;cACLJ,8BAA8B,CAAC,IAAI,CAAC;YACtC;UACF;QACF,CAAC;QAEDgD,gBAAgB,CAACQ,OAAO,GAAG,YAAM;UAAA,IAAAC,qBAAA,EAAAC,cAAA;UAC/BxE,QAAQ,kCAAA6C,MAAA,CAAkCV,YAAY,iBAAAU,MAAA,CAAcJ,KAAK,CAACC,IAAI,WAAQ,CAAE,CAAC;UACzF,IAAIkB,kBAAkB,EAAE;YACtB5D,QAAQ,kCAAA6C,MAAA,CAAkCV,YAAY,uCAAoC,CAAC;YAC3F,IAAIe,eAAe,EAAE;cACnBhC,4BAA4B,CAAC,IAAI,CAAC;YACpC,CAAC,MAAM;cACLJ,8BAA8B,CAAC,IAAI,CAAC;YACtC;YACA,IAAM2D,kBAAkB,GAAGxB,4BAA4B,CAACC,eAAe,CAAC;YACxE/C,mBAAmB,CAACsE,kBAAkB,CAAC;YACvC;UACF;UACA,IAAMC,oBAAoB,GAAGxB,eAAe,GAAG,OAAO,GAAG,SAAS;UAClE,IAAMyB,SAAS,IAAAJ,qBAAA,IAAAC,cAAA,GAAGI,aAAa,cAAAJ,cAAA,gBAAAA,cAAA,GAAbA,cAAA,CAAgBE,oBAAoB,CAAC,cAAAF,cAAA,uBAArCA,cAAA,CAAuCG,SAAS,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;UACxE,IAAII,SAAS,CAACE,QAAQ,IAAIF,SAAS,CAACE,QAAQ,CAAC1C,YAAY,CAAC,EAAE;YAC1D,IAAM2C,uBAAuB,GAAG5E,gBAAgB,CAACyE,SAAS,CAACE,QAAQ,CAAC1C,YAAY,CAAC,CAAC4C,QAAQ,CAAC;YAC3F9E,OAAO,qDAAA4C,MAAA,CAAqDV,YAAY,aAAAU,MAAA,CAAUiC,uBAAuB,CAAE,CAAC;YAC5GhB,gBAAgB,GAAGT,sBAAsB,CAACyB,uBAAuB,EAAE;cACjElB,kBAAkB,EAAE,IAAI;cACxBV,eAAe,EAAfA;YACF,CAAC,CAAC;YACF,IAAMuB,mBAAkB,GAAGxB,4BAA4B,CAACC,eAAe,CAAC;YACxE/C,mBAAmB,CAACsE,mBAAkB,CAAC;YACvC,IAAMO,4BAA4B,GAAGrC,0BAA0B,CAAC,CAAC;YACjE,IAAIqC,4BAA4B,EAAE;cAChCA,4BAA4B,CAACC,qBAAqB,CAChD,UAAU,EACVnB,gBACF,CAAC;YACH,CAAC,MAAM;cACLhC,QAAQ,CAACc,IAAI,CAACqC,qBAAqB,CACjC,YAAY,EACZnB,gBACF,CAAC;YACH;UACF,CAAC,MAAM;YACL9D,QAAQ,kCAAA6C,MAAA,CAAkCV,YAAY,iBAAAU,MAAA,CAAcS,GAAG,oEAAiE,CAAC;YACzI,IAAIJ,eAAe,EAAE;cACnBhC,4BAA4B,CAAC,IAAI,CAAC;YACpC,CAAC,MAAM;cACLJ,8BAA8B,CAAC,IAAI,CAAC;YACtC;UACF;QACF,CAAC;QACD,OAAOgD,gBAAgB;MACzB,CAAC;MAED,IAAMoB,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAA,EAAS;QACxC,IAAMC,oBAAoB,GAAGjD,yBAAyB,CAACC,YAAY,CAAC;QAEpE,IAAIY,6BAA6B,EAAE;UACjCA,6BAA6B,CAACkB,GAAG,GAAGkB,oBAAoB;UACxDpC,6BAA6B,CAACd,eAAe,CAAC,IAAI,CAAC;UACnDc,6BAA6B,CAACmB,OAAO,CAACC,iBAAiB,GAAGhC,YAAY;UACtE;QACF;QAEA,IAAIM,KAAK,CAACC,IAAI,CAACM,aAAa,EAAE;UAC5B,IAAMoC,qBAAqB,GAAG/B,sBAAsB,CAACZ,KAAK,CAACC,IAAI,CAACM,aAAa,EAAE;YAAEE,eAAe,EAAE;UAAK,CAAC,CAAC;UACzG,IAAM8B,4BAA4B,GAAGrC,0BAA0B,CAAC,CAAC;UACjE,IAAIqC,4BAA4B,EAAE;YAChCA,4BAA4B,CAACC,qBAAqB,CAChD,UAAU,EACVG,qBACF,CAAC;UACH,CAAC,MAAM;YACLtD,QAAQ,CAACc,IAAI,CAACqC,qBAAqB,CACjC,YAAY,EACZG,qBACF,CAAC;UACH;QACF;QACAlE,4BAA4B,CAAC,IAAI,CAAC;MACpC,CAAC;MAED,IAAI,CAAC4B,wBAAwB,EAAE;QAC7B,IAAMuC,uBAAuB,GAAGhC,sBAAsB,CAACZ,KAAK,CAACC,IAAI,WAAQ,CAAC;QAC1EZ,QAAQ,CAACc,IAAI,CAACqC,qBAAqB,CACjC,YAAY,EACZI,uBACF,CAAC;QACDH,2BAA2B,CAACnC,6BAA6B,CAAC;MAC5D,CAAC,MAAM;QACL,IAAMoC,oBAAoB,GAAGjD,yBAAyB,CAACC,YAAY,CAAC;QACpEW,wBAAwB,CAACmB,GAAG,GAAGkB,oBAAoB;QACnDrC,wBAAwB,CAACb,eAAe,CAAC,IAAI,CAAC;QAC9Ca,wBAAwB,CAACoB,OAAO,CAACE,mBAAmB,GAAGjC,YAAY;QACnE+C,2BAA2B,CAACnC,6BAA6B,CAAC;MAC5D;MACAjC,8BAA8B,CAAC,IAAI,CAAC;MACpCI,4BAA4B,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,aAAa,EAAEC,mBAAmB,EAAEC,MAAM,CAAC,CAAC;AAClD,CAAC;AAED,eAAeJ,uBAAuB","ignoreList":[]}