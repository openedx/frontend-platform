{"version":3,"file":"transifex-utils.js","names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","fs","require","glob","path","gatherJson","dir","ret","files","sync","concat","forEach","filename","messages","JSON","parse","readFileSync","push","apply","escapeDots","messageId","replace","jsonDir","process","argv","messageObjects","exitCode","Error","loggingPrefix","basename","__filename","bashScriptsPath","hashFile","stdout","write","messageInfo","outputFile","writeFileSync","message","transifexFormatId","id","info","find","mi","key","appendFileSync","string_hash","description","output","defaultMessage","stringify"],"sources":["../../../src/i18n/scripts/transifex-utils.js"],"sourcesContent":["#!/usr/bin/env node\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/*\n * See the Makefile for how the required hash file is downloaded from Transifex.\n */\n\n/*\n * Expected input: a directory, possibly containing subdirectories, with .json files.  Each .json\n * file is an array of translation triplets (id, description, defaultMessage).\n *\n *\n */\nfunction gatherJson(dir) {\n  const ret = [];\n  const files = glob.sync(`${dir}/**/*.json`);\n\n  files.forEach((filename) => {\n    const messages = JSON.parse(fs.readFileSync(filename));\n    ret.push(...messages);\n  });\n  return ret;\n}\n\n// the hash file returns ids whose periods are \"escaped\" (sort of), like this:\n// \"key\": \"profile\\\\.sociallinks\\\\.social\\\\.links\"\n// so our regular messageIds won't match them out of the box\nfunction escapeDots(messageId) {\n  return messageId.replace(/\\./g, '\\\\.');\n}\n\nconst jsonDir = process.argv[2];\nconst messageObjects = gatherJson(jsonDir);\n\nif (messageObjects.length === 0) {\n  process.exitCode = 1;\n  throw new Error('Found no messages');\n}\n\nif (process.argv[3] === '--comments') { // prepare to handle the translator notes\n  const loggingPrefix = path.basename(`${__filename}`); // the name of this JS file\n  const bashScriptsPath = (\n    process.argv[4] && process.argv[4] === '--v3-scripts-path'\n      ? './node_modules/@edx/reactifex/bash_scripts'\n      : './node_modules/reactifex/bash_scripts');\n\n  const hashFile = `${bashScriptsPath}/hashmap.json`;\n  process.stdout.write(`${loggingPrefix}: reading hash file ${hashFile}\\n`);\n  const messageInfo = JSON.parse(fs.readFileSync(hashFile));\n\n  const outputFile = `${bashScriptsPath}/hashed_data.txt`;\n  process.stdout.write(`${loggingPrefix}: writing to output file ${outputFile}\\n`);\n  fs.writeFileSync(outputFile, '');\n\n  messageObjects.forEach((message) => {\n    const transifexFormatId = escapeDots(message.id);\n\n    const info = messageInfo.find(mi => mi.key === transifexFormatId);\n    if (info) {\n      fs.appendFileSync(outputFile, `${info.string_hash}|${message.description}\\n`);\n    } else {\n      process.stdout.write(`${loggingPrefix}: string ${message.id} does not yet exist on transifex!\\n`);\n    }\n  });\n} else {\n  const output = {};\n\n  messageObjects.forEach((message) => {\n    output[message.id] = message.defaultMessage;\n  });\n  fs.writeFileSync(process.argv[3], JSON.stringify(output, null, 2));\n}\n"],"mappings":"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","ignoreList":[]}