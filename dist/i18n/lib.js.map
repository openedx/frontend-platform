{"version":3,"file":"lib.js","names":["PropTypes","Cookies","merge","cookies","supportedLocales","rtlLocales","config","loggingService","messages","intlShape","object","getLoggingService","LOCALE_TOPIC","LOCALE_CHANGED","concat","getCookies","getPrimaryLanguageSubtag","code","split","findSupportedLocale","locale","undefined","getLocale","Error","cookieLangPref","get","LANGUAGE_PREFERENCE_COOKIE_NAME","toLowerCase","global","navigator","language","getMessages","arguments","length","isRtl","includes","handleRtl","document","getElementsByTagName","setAttribute","messagesShape","ar","objectOf","string","en","fr","ca","he","id","pl","ru","th","uk","optionsShape","isRequired","shape","logError","func","oneOfType","arrayOf","mergeMessages","newMessages","msgs","Array","isArray","apply","_toConsumableArray","configure","options","checkPropTypes","ENVIRONMENT","Object","keys","forEach","key","indexOf","console","warn"],"sources":["../../src/i18n/lib.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport merge from 'lodash.merge';\n\nimport '@formatjs/intl-pluralrules/polyfill';\nimport '@formatjs/intl-pluralrules/locale-data/ar';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/es';\nimport '@formatjs/intl-pluralrules/locale-data/fr';\nimport '@formatjs/intl-pluralrules/locale-data/zh';\nimport '@formatjs/intl-pluralrules/locale-data/ca';\nimport '@formatjs/intl-pluralrules/locale-data/he';\nimport '@formatjs/intl-pluralrules/locale-data/id';\nimport '@formatjs/intl-pluralrules/locale-data/ko';\nimport '@formatjs/intl-pluralrules/locale-data/pl';\nimport '@formatjs/intl-pluralrules/locale-data/pt';\nimport '@formatjs/intl-pluralrules/locale-data/ru';\nimport '@formatjs/intl-pluralrules/locale-data/th';\nimport '@formatjs/intl-pluralrules/locale-data/uk';\n\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/ar';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/es';\nimport '@formatjs/intl-relativetimeformat/locale-data/fr';\nimport '@formatjs/intl-relativetimeformat/locale-data/zh';\nimport '@formatjs/intl-relativetimeformat/locale-data/ca';\nimport '@formatjs/intl-relativetimeformat/locale-data/he';\nimport '@formatjs/intl-relativetimeformat/locale-data/id';\nimport '@formatjs/intl-relativetimeformat/locale-data/ko';\nimport '@formatjs/intl-relativetimeformat/locale-data/pl';\nimport '@formatjs/intl-relativetimeformat/locale-data/pt';\nimport '@formatjs/intl-relativetimeformat/locale-data/ru';\nimport '@formatjs/intl-relativetimeformat/locale-data/th';\nimport '@formatjs/intl-relativetimeformat/locale-data/uk';\n\nconst cookies = new Cookies();\nconst supportedLocales = [\n  'ar', // Arabic\n  // NOTE: 'en' is not included in this list intentionally, since it's the fallback.\n  'es-419', // Spanish, Latin American\n  'fa', // Farsi\n  'fa-ir', // Farsi, Iran\n  'fr', // French\n  'zh-cn', // Chinese, Simplified\n  'ca', // Catalan\n  'he', // Hebrew\n  'id', // Indonesian\n  'ko-kr', // Korean (Korea)\n  'pl', // Polish\n  'pt-br', // Portuguese (Brazil)\n  'ru', // Russian\n  'th', // Thai\n  'uk', // Ukrainian\n];\nconst rtlLocales = [\n  'ar', // Arabic\n  'he', // Hebrew\n  'fa', // Farsi (not currently supported)\n  'fa-ir', // Farsi Iran\n  'ur', // Urdu (not currently supported)\n];\n\nlet config = null;\nlet loggingService = null;\nlet messages = null;\n\n/**\n * @memberof module:Internationalization\n *\n * Prior versions of react-intl (our primary implementation of the i18n service) included a\n * PropTypes-based 'shape' for its `intl` object.  This has since been removed.  For legacy\n * compatibility, we include an `intlShape` export that is set to PropTypes.object.  Usage of this\n * export is deprecated.\n *\n * @deprecated\n */\nexport const intlShape = PropTypes.object;\n\n/**\n *\n * @ignore\n * @returns {LoggingService}\n */\nexport const getLoggingService = () => loggingService;\n\n/**\n * @memberof module:Internationalization\n */\nexport const LOCALE_TOPIC = 'LOCALE';\n\n/**\n * @memberof module:Internationalization\n */\nexport const LOCALE_CHANGED = `${LOCALE_TOPIC}.CHANGED`;\n\n/**\n *\n * @memberof module:Internationalization\n * @returns {Cookies}\n */\nexport function getCookies() {\n  return cookies;\n}\n\n/**\n * Some of our dependencies function on primary language subtags, rather than full locales.\n * This function strips a locale down to that first subtag.  Depending on the code, this\n * may be 2 or more characters.\n *\n * @param {string} code\n * @memberof module:Internationalization\n */\nexport function getPrimaryLanguageSubtag(code) {\n  return code.split('-')[0];\n}\n\n/**\n * Finds the closest supported locale to the one provided.  This is done in three steps:\n *\n * 1. Returning the locale itself if its exact language code is supported.\n * 2. Returning the primary language subtag of the language code if it is supported (ar for ar-eg,\n * for instance).\n * 3. Returning 'en' if neither of the above produce a supported locale.\n *\n * @param {string} locale\n * @returns {string}\n * @memberof module:Internationalization\n */\nexport function findSupportedLocale(locale) {\n  if (messages[locale] !== undefined) {\n    return locale;\n  }\n\n  if (messages[getPrimaryLanguageSubtag(locale)] !== undefined) {\n    return getPrimaryLanguageSubtag(locale);\n  }\n\n  return 'en';\n}\n\n/**\n * Get the locale from the cookie or, failing that, the browser setting.\n * Gracefully fall back to a more general primary language subtag or to English (en)\n * if we don't support that language.\n *\n * @param {string} locale If a locale is provided, returns the closest supported locale. Optional.\n * @throws An error if i18n has not yet been configured.\n * @returns {string}\n * @memberof module:Internationalization\n */\nexport function getLocale(locale) {\n  if (messages === null) {\n    throw new Error('getLocale called before configuring i18n. Call configure with messages first.');\n  }\n  // 1. Explicit application request\n  if (locale !== undefined) {\n    return findSupportedLocale(locale);\n  }\n  // 2. User setting in cookie\n  const cookieLangPref = cookies\n    .get(config.LANGUAGE_PREFERENCE_COOKIE_NAME);\n  if (cookieLangPref) {\n    return findSupportedLocale(cookieLangPref.toLowerCase());\n  }\n  // 3. Browser language (default)\n  // Note that some browers prefer upper case for the region part of the locale, while others don't.\n  // Thus the toLowerCase, for consistency.\n  // https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/language\n  return findSupportedLocale(global.navigator.language.toLowerCase());\n}\n\n/**\n * Returns messages for the provided locale, or the user's preferred locale if no argument is\n * provided.\n *\n * @param {string} [locale=getLocale()]\n * @memberof module:Internationalization\n */\nexport function getMessages(locale = getLocale()) {\n  return messages[locale];\n}\n\n/**\n * Determines if the provided locale is a right-to-left language.\n *\n * @param {string} locale\n * @memberof module:Internationalization\n */\nexport function isRtl(locale) {\n  return rtlLocales.includes(locale);\n}\n\n/**\n * Handles applying the RTL stylesheet and \"dir=rtl\" attribute to the html tag if the current locale\n * is a RTL language.\n *\n * @memberof module:Internationalization\n */\nexport function handleRtl() {\n  if (isRtl(getLocale())) {\n    global.document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n  } else {\n    global.document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n  }\n}\n\nconst messagesShape = {\n  ar: PropTypes.objectOf(PropTypes.string), // Arabic\n  en: PropTypes.objectOf(PropTypes.string),\n  'es-419': PropTypes.objectOf(PropTypes.string), // Spanish, Latin American\n  fr: PropTypes.objectOf(PropTypes.string), // French\n  'zh-cn': PropTypes.objectOf(PropTypes.string), // Chinese, Simplified\n  ca: PropTypes.objectOf(PropTypes.string), // Catalan\n  he: PropTypes.objectOf(PropTypes.string), // Hebrew\n  id: PropTypes.objectOf(PropTypes.string), // Indonesian\n  'ko-kr': PropTypes.objectOf(PropTypes.string), // Korean (Korea)\n  pl: PropTypes.objectOf(PropTypes.string), // Polish\n  'pt-br': PropTypes.objectOf(PropTypes.string), // Portuguese (Brazil)\n  ru: PropTypes.objectOf(PropTypes.string), // Russian\n  th: PropTypes.objectOf(PropTypes.string), // Thai\n  uk: PropTypes.objectOf(PropTypes.string), // Ukrainian\n};\n\nconst optionsShape = {\n  config: PropTypes.object.isRequired,\n  loggingService: PropTypes.shape({\n    logError: PropTypes.func.isRequired,\n  }).isRequired,\n  messages: PropTypes.oneOfType([\n    PropTypes.shape(messagesShape),\n    PropTypes.arrayOf(PropTypes.shape(messagesShape)),\n  ]).isRequired,\n};\n\n/**\n *\n *\n * @param {Object} newMessages\n * @returns {Object}\n * @memberof module:Internationalization\n */\nexport function mergeMessages(newMessages) {\n  const msgs = Array.isArray(newMessages) ? merge({}, ...newMessages) : newMessages;\n  messages = merge(messages, msgs);\n\n  return messages;\n}\n\n/**\n * Configures the i18n library with messages for your application.\n *\n * Logs a warning if it detects a locale it doesn't expect (as defined by the supportedLocales list\n * above), or if an expected locale is not provided.\n *\n * @param {Object} options\n * @param {LoggingService} options.loggingService\n * @param {Object} options.config\n * @param {Object} options.messages\n * @memberof module:Internationalization\n */\nexport function configure(options) {\n  PropTypes.checkPropTypes(optionsShape, options, 'property', 'i18n');\n  // eslint-disable-next-line prefer-destructuring\n  loggingService = options.loggingService;\n  // eslint-disable-next-line prefer-destructuring\n  config = options.config;\n  messages = Array.isArray(options.messages) ? merge({}, ...options.messages) : options.messages;\n\n  if (config.ENVIRONMENT !== 'production') {\n    Object.keys(messages).forEach((key) => {\n      if (supportedLocales.indexOf(key) < 0) {\n        console.warn(`Unexpected locale: ${key}`); // eslint-disable-line no-console\n      }\n    });\n\n    supportedLocales.forEach((key) => {\n      if (messages[key] === undefined) {\n        console.warn(`Missing locale: ${key}`); // eslint-disable-line no-console\n      }\n    });\n  }\n\n  handleRtl();\n}\n"],"mappings":"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","ignoreList":[]}