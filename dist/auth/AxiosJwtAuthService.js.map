{"version":3,"file":"AxiosJwtAuthService.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","axios","PropTypes","logFrontendAuthError","camelCaseObject","ensureDefinedConfig","createJwtTokenProviderInterceptor","createCsrfTokenProviderInterceptor","createProcessAxiosRequestErrorInterceptor","AxiosJwtTokenService","AxiosCsrfTokenService","configureCache","optionsPropTypes","config","shape","BASE_URL","string","isRequired","LMS_BASE_URL","LOGIN_URL","LOGOUT_URL","REFRESH_ACCESS_TOKEN_ENDPOINT","ACCESS_TOKEN_COOKIE_NAME","CSRF_TOKEN_API_PATH","loggingService","logError","func","logInfo","AxiosJwtAuthService","options","_this","authenticatedHttpClient","httpClient","cachedAuthenticatedHttpClient","cachedHttpClient","authenticatedUser","checkPropTypes","jwtTokenService","csrfTokenService","addAuthenticationToHttpClient","cachedAxiosClient","concat","message","middleware","applyMiddleware","undefined","clients","middlewareFn","client","error","getAuthenticatedHttpClient","useCache","getHttpClient","getJwtTokenService","getCsrfTokenService","getLoginRedirectUrl","redirectUrl","encodeURIComponent","redirectToLogin","global","location","assign","getLogoutRedirectUrl","redirectToLogout","getAuthenticatedUser","setAuthenticatedUser","authUser","_fetchAuthenticatedUser","_callee","decodedAccessToken","_args","_callee$","_context","getJwtToken","forceRefresh","email","userId","user_id","username","preferred_username","roles","administrator","setCustomAttribute","fetchAuthenticatedUser","_ensureAuthenticatedUser","_callee2","isRedirectFromLoginPage","redirectLoopError","unauthorizedError","_args2","_callee2$","_context2","document","referrer","startsWith","isRedirecting","ensureAuthenticatedUser","_hydrateAuthenticatedUser","_callee3","user","response","_callee3$","_context3","get","_objectSpread","data","hydrateAuthenticatedUser","newHttpClient","defaults","withCredentials","refreshAccessTokenInterceptor","shouldSkip","axiosRequestConfig","isPublic","attachCsrfTokenInterceptor","isCsrfExempt","CSRF_PROTECTED_METHODS","includes","processAxiosRequestErrorInterceptor","interceptors","request","use"],"sources":["../../src/auth/AxiosJwtAuthService.js"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { logFrontendAuthError } from './utils';\nimport { camelCaseObject, ensureDefinedConfig } from '../utils';\nimport createJwtTokenProviderInterceptor from './interceptors/createJwtTokenProviderInterceptor';\nimport createCsrfTokenProviderInterceptor from './interceptors/createCsrfTokenProviderInterceptor';\nimport createProcessAxiosRequestErrorInterceptor from './interceptors/createProcessAxiosRequestErrorInterceptor';\nimport AxiosJwtTokenService from './AxiosJwtTokenService';\nimport AxiosCsrfTokenService from './AxiosCsrfTokenService';\nimport configureCache from './LocalForageCache';\n\nconst optionsPropTypes = {\n  config: PropTypes.shape({\n    BASE_URL: PropTypes.string.isRequired,\n    LMS_BASE_URL: PropTypes.string.isRequired,\n    LOGIN_URL: PropTypes.string.isRequired,\n    LOGOUT_URL: PropTypes.string.isRequired,\n    REFRESH_ACCESS_TOKEN_ENDPOINT: PropTypes.string.isRequired,\n    ACCESS_TOKEN_COOKIE_NAME: PropTypes.string.isRequired,\n    CSRF_TOKEN_API_PATH: PropTypes.string.isRequired,\n  }).isRequired,\n  loggingService: PropTypes.shape({\n    logError: PropTypes.func.isRequired,\n    logInfo: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\n/**\n * @implements {AuthService}\n * @memberof module:Auth\n */\nclass AxiosJwtAuthService {\n  /**\n   * @param {Object} options\n   * @param {Object} options.config\n   * @param {string} options.config.BASE_URL\n   * @param {string} options.config.LMS_BASE_URL\n   * @param {string} options.config.LOGIN_URL\n   * @param {string} options.config.LOGOUT_URL\n   * @param {string} options.config.REFRESH_ACCESS_TOKEN_ENDPOINT\n   * @param {string} options.config.ACCESS_TOKEN_COOKIE_NAME\n   * @param {string} options.config.CSRF_TOKEN_API_PATH\n   * @param {Object} options.loggingService requires logError and logInfo methods\n   */\n  constructor(options) {\n    this.authenticatedHttpClient = null;\n    this.httpClient = null;\n    this.cachedAuthenticatedHttpClient = null;\n    this.cachedHttpClient = null;\n    this.authenticatedUser = null;\n\n    ensureDefinedConfig(options, 'AuthService');\n    PropTypes.checkPropTypes(optionsPropTypes, options, 'options', 'AuthService');\n\n    this.config = options.config;\n    this.loggingService = options.loggingService;\n    this.jwtTokenService = new AxiosJwtTokenService(\n      this.loggingService,\n      this.config.ACCESS_TOKEN_COOKIE_NAME,\n      this.config.REFRESH_ACCESS_TOKEN_ENDPOINT,\n    );\n    this.csrfTokenService = new AxiosCsrfTokenService(this.config.CSRF_TOKEN_API_PATH);\n    this.authenticatedHttpClient = this.addAuthenticationToHttpClient(axios.create());\n    this.httpClient = axios.create();\n    configureCache()\n      .then((cachedAxiosClient) => {\n        this.cachedAuthenticatedHttpClient = this.addAuthenticationToHttpClient(cachedAxiosClient);\n        this.cachedHttpClient = cachedAxiosClient;\n      })\n      .catch((e) => {\n        // fallback to non-cached HTTP clients and log error\n        this.cachedAuthenticatedHttpClient = this.authenticatedHttpClient;\n        this.cachedHttpClient = this.httpClient;\n        logFrontendAuthError(this.loggingService, `configureCache failed with error: ${e.message}`);\n      }).finally(() => {\n        this.middleware = options.middleware;\n        this.applyMiddleware(options.middleware);\n      });\n  }\n\n  /**\n   * Applies middleware to the axios instances in this service.\n   *\n   * @param {Array} middleware Middleware to apply.\n   */\n  applyMiddleware(middleware = []) {\n    const clients = [\n      this.authenticatedHttpClient, this.httpClient,\n      this.cachedAuthenticatedHttpClient, this.cachedHttpClient,\n    ];\n    try {\n      (middleware).forEach((middlewareFn) => {\n        clients.forEach((client) => client && middlewareFn(client));\n      });\n    } catch (error) {\n      logFrontendAuthError(this.loggingService, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets the authenticated HTTP client for the service.  This is an axios instance.\n   *\n   * @param {Object} [options] Optional options for how the HTTP client should be configured.\n   * @param {boolean} [options.useCache] Whether to use front end caching for all requests made\n   * with the returned client.\n   *\n   * @returns {HttpClient} A configured axios http client which can be used for authenticated\n   * requests.\n   */\n  getAuthenticatedHttpClient(options = {}) {\n    if (options.useCache) {\n      return this.cachedAuthenticatedHttpClient;\n    }\n\n    return this.authenticatedHttpClient;\n  }\n\n  /**\n   * Gets the unauthenticated HTTP client for the service.  This is an axios instance.\n   *\n   * @param {Object} [options] Optional options for how the HTTP client should be configured.\n   * @param {boolean} [options.useCache] Whether to use front end caching for all requests made\n   * with the returned client.\n   * @returns {HttpClient} A configured axios http client.\n   */\n  getHttpClient(options = {}) {\n    if (options.useCache) {\n      return this.cachedHttpClient;\n    }\n\n    return this.httpClient;\n  }\n\n  /**\n   * Used primarily for testing.\n   *\n   * @ignore\n   */\n  getJwtTokenService() {\n    return this.jwtTokenService;\n  }\n\n  /**\n   * Used primarily for testing.\n   *\n   * @ignore\n   */\n  getCsrfTokenService() {\n    return this.csrfTokenService;\n  }\n\n  /**\n   * Builds a URL to the login page with a post-login redirect URL attached as a query parameter.\n   *\n   * ```\n   * const url = getLoginRedirectUrl('http://localhost/mypage');\n   * console.log(url); // http://localhost/login?next=http%3A%2F%2Flocalhost%2Fmypage\n   * ```\n   *\n   * @param {string} redirectUrl The URL the user should be redirected to after logging in.\n   */\n  getLoginRedirectUrl(redirectUrl = this.config.BASE_URL) {\n    return `${this.config.LOGIN_URL}?next=${encodeURIComponent(redirectUrl)}`;\n  }\n\n  /**\n   * Redirects the user to the login page.\n   *\n   * @param {string} redirectUrl The URL the user should be redirected to after logging in.\n   */\n  redirectToLogin(redirectUrl = this.config.BASE_URL) {\n    global.location.assign(this.getLoginRedirectUrl(redirectUrl));\n  }\n\n  /**\n   * Builds a URL to the logout page with a post-logout redirect URL attached as a query parameter.\n   *\n   * ```\n   * const url = getLogoutRedirectUrl('http://localhost/mypage');\n   * console.log(url); // http://localhost/logout?next=http%3A%2F%2Flocalhost%2Fmypage\n   * ```\n   *\n   * @param {string} redirectUrl The URL the user should be redirected to after logging out.\n   */\n  getLogoutRedirectUrl(redirectUrl = this.config.BASE_URL) {\n    return `${this.config.LOGOUT_URL}?redirect_url=${encodeURIComponent(redirectUrl)}`;\n  }\n\n  /**\n   * Redirects the user to the logout page.\n   *\n   * @param {string} redirectUrl The URL the user should be redirected to after logging out.\n   */\n  redirectToLogout(redirectUrl = this.config.BASE_URL) {\n    global.location.assign(this.getLogoutRedirectUrl(redirectUrl));\n  }\n\n  /**\n   * If it exists, returns the user data representing the currently authenticated user. If the\n   * user is anonymous, returns null.\n   *\n   * @returns {UserData|null}\n   */\n  getAuthenticatedUser() {\n    return this.authenticatedUser;\n  }\n\n  /**\n   * Sets the authenticated user to the provided value.\n   *\n   * @param {UserData} authUser\n   */\n  setAuthenticatedUser(authUser) {\n    this.authenticatedUser = authUser;\n  }\n\n  /**\n   * Reads the authenticated user's access token. Resolves to null if the user is\n   * unauthenticated.\n   *\n   * @returns {Promise<UserData>|Promise<null>} Resolves to the user's access token if they are\n   * logged in.\n   */\n  async fetchAuthenticatedUser(options = {}) {\n    const decodedAccessToken = await this.jwtTokenService.getJwtToken(options.forceRefresh || false);\n\n    if (decodedAccessToken !== null) {\n      this.setAuthenticatedUser({\n        email: decodedAccessToken.email,\n        userId: decodedAccessToken.user_id,\n        username: decodedAccessToken.preferred_username,\n        roles: decodedAccessToken.roles || [],\n        administrator: decodedAccessToken.administrator,\n        name: decodedAccessToken.name,\n      });\n      // Sets userId as a custom attribute that will be included with all subsequent log messages.\n      // Very helpful for debugging.\n      this.loggingService.setCustomAttribute('userId', decodedAccessToken.user_id);\n    } else {\n      this.setAuthenticatedUser(null);\n      // Intentionally not setting `userId` in the logging service here because it would be useful\n      // to know the previously logged in user for debugging refresh issues.\n    }\n\n    return this.getAuthenticatedUser();\n  }\n\n  /**\n   * Ensures a user is authenticated. It will redirect to login when not\n   * authenticated.\n   *\n   * @param {string} [redirectUrl=config.BASE_URL] to return user after login when not\n   * authenticated.\n   * @returns {Promise<UserData>}\n   */\n  async ensureAuthenticatedUser(redirectUrl = this.config.BASE_URL) {\n    await this.fetchAuthenticatedUser();\n\n    if (this.getAuthenticatedUser() === null) {\n      const isRedirectFromLoginPage = global.document.referrer\n        && global.document.referrer.startsWith(this.config.LOGIN_URL);\n\n      if (isRedirectFromLoginPage) {\n        const redirectLoopError = new Error('Redirect from login page. Rejecting to avoid infinite redirect loop.');\n        logFrontendAuthError(this.loggingService, redirectLoopError);\n        throw redirectLoopError;\n      }\n\n      // The user is not authenticated, send them to the login page.\n      this.redirectToLogin(redirectUrl);\n\n      const unauthorizedError = new Error('Failed to ensure the user is authenticated');\n      unauthorizedError.isRedirecting = true;\n      throw unauthorizedError;\n    }\n\n    return this.getAuthenticatedUser();\n  }\n\n  /**\n   * Fetches additional user account information for the authenticated user and merges it into the\n   * existing authenticatedUser object, available via getAuthenticatedUser().\n   *\n   * ```\n   *  console.log(authenticatedUser); // Will be sparse and only contain basic information.\n   *  await hydrateAuthenticatedUser()\n   *  const authenticatedUser = getAuthenticatedUser();\n   *  console.log(authenticatedUser); // Will contain additional user information\n   * ```\n   *\n   * @returns {Promise<null>}\n   */\n  async hydrateAuthenticatedUser() {\n    const user = this.getAuthenticatedUser();\n    if (user !== null) {\n      const response = await this.authenticatedHttpClient\n        .get(`${this.config.LMS_BASE_URL}/api/user/v1/accounts/${user.username}`);\n      this.setAuthenticatedUser({ ...user, ...camelCaseObject(response.data) });\n    }\n  }\n\n  /**\n * Adds authentication defaults and interceptors to an HTTP client instance.\n *\n * @param {HttpClient} newHttpClient\n * @param {Object} config\n * @param {string} [config.REFRESH_ACCESS_TOKEN_ENDPOINT]\n * @param {string} [config.ACCESS_TOKEN_COOKIE_NAME]\n * @param {string} [config.CSRF_TOKEN_API_PATH]\n * @returns {HttpClient} A configured Axios HTTP client.\n */\n  addAuthenticationToHttpClient(newHttpClient) {\n    const httpClient = Object.create(newHttpClient);\n    // Set withCredentials to true. Enables cross-site Access-Control requests\n    // to be made using cookies, authorization headers or TLS client\n    // certificates. More on MDN:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    httpClient.defaults.withCredentials = true;\n\n    // Axios interceptors\n\n    // The JWT access token interceptor attempts to refresh the user's jwt token\n    // before any request unless the isPublic flag is set on the request config.\n    const refreshAccessTokenInterceptor = createJwtTokenProviderInterceptor({\n      jwtTokenService: this.jwtTokenService,\n      shouldSkip: axiosRequestConfig => axiosRequestConfig.isPublic,\n    });\n    // The CSRF token intercepter fetches and caches a csrf token for any post,\n    // put, patch, or delete request. That token is then added to the request\n    // headers.\n    const attachCsrfTokenInterceptor = createCsrfTokenProviderInterceptor({\n      csrfTokenService: this.csrfTokenService,\n      CSRF_TOKEN_API_PATH: this.config.CSRF_TOKEN_API_PATH,\n      shouldSkip: (axiosRequestConfig) => {\n        const { method, isCsrfExempt } = axiosRequestConfig;\n        const CSRF_PROTECTED_METHODS = ['post', 'put', 'patch', 'delete'];\n        return isCsrfExempt || !CSRF_PROTECTED_METHODS.includes(method);\n      },\n    });\n\n    const processAxiosRequestErrorInterceptor = createProcessAxiosRequestErrorInterceptor({\n      loggingService: this.loggingService,\n    });\n\n    // Request interceptors: Axios runs the interceptors in reverse order from\n    // how they are listed. After fetching csrf tokens no longer require jwt\n    // authentication, it won't matter which happens first. This change is\n    // coming soon in edx-platform. Nov. 2019\n    httpClient.interceptors.request.use(attachCsrfTokenInterceptor);\n    httpClient.interceptors.request.use(refreshAccessTokenInterceptor);\n\n    // Response interceptor: moves axios response error data into the error\n    // object at error.customAttributes\n    httpClient.interceptors.response.use(\n      response => response,\n      processAxiosRequestErrorInterceptor,\n    );\n\n    return httpClient;\n  }\n}\n\nexport default AxiosJwtAuthService;\n"],"mappings":"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","ignoreList":[]}