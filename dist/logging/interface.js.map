{"version":3,"file":"interface.js","names":["PropTypes","optionsShape","config","object","isRequired","serviceShape","logInfo","func","logError","service","configure","LoggingService","options","checkPropTypes","infoStringOrErrorObject","customAttributes","errorStringOrObject","setCustomAttribute","name","value","getLoggingService","Error","resetLoggingService"],"sources":["../../src/logging/interface.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform/logging**\n *\n * Contains a shared interface for logging information. (The default implementation is in\n * NewRelicLoggingService.js.) When in development mode, all messages will instead be sent to the console.\n *\n * The `initialize` function performs much of the logging configuration for you.  If, however,\n * you're not using the `initialize` function, logging (via New Relic) can be configured via:\n *\n * ```\n * import { configure, NewRelicLoggingService, logInfo, logError } from '@edx/frontend-platform/logging';\n * import { geConfig } from '@edx/frontend-platform';\n *\n * configureLogging(NewRelicLoggingService, {\n *   config: getConfig(),\n * });\n *\n * logInfo('Just so you know...');\n * logInfo(new Error('Unimportant error'), { type: 'unimportant' });\n * logError('Uhoh!');\n * logError(new Error('Uhoh error!'));\n * ```\n *\n * As shown in this example, logging depends on the configuration document.\n *\n * @module Logging\n */\n\nimport PropTypes from 'prop-types';\n\nconst optionsShape = {\n  config: PropTypes.object.isRequired,\n};\n\nconst serviceShape = {\n  logInfo: PropTypes.func.isRequired,\n  logError: PropTypes.func.isRequired,\n};\n\nlet service = null;\n\n/**\n *\n */\nexport function configure(LoggingService, options) {\n  PropTypes.checkPropTypes(optionsShape, options, 'property', 'Logging');\n  service = new LoggingService(options);\n  PropTypes.checkPropTypes(serviceShape, service, 'property', 'LoggingService');\n  return service;\n}\n\n/**\n * Logs a message to the 'info' log level. Can accept custom attributes as a property of the error\n * object, or as an optional second parameter.\n *\n * @param {string|Error} infoStringOrErrorObject\n * @param {Object} [customAttributes={}]\n */\nexport function logInfo(infoStringOrErrorObject, customAttributes) {\n  return service.logInfo(infoStringOrErrorObject, customAttributes);\n}\n\n/**\n * Logs a message to the 'error' log level.  Can accept custom attributes as a property of the error\n * object, or as an optional second parameter.\n *\n * @param {string|Error} errorStringOrObject\n * @param {Object} [customAttributes={}]\n */\nexport function logError(errorStringOrObject, customAttributes) {\n  return service.logError(errorStringOrObject, customAttributes);\n}\n\n/**\n * Sets a custom attribute that will be included with all subsequent log messages.\n *\n * @param {string} name\n * @param {string|number|null} value\n */\nexport function setCustomAttribute(name, value) {\n  return service.setCustomAttribute(name, value);\n}\n\n/**\n *\n * @throws {Error} Thrown if the logging service has not yet been configured via {@link configure}.\n * @returns {LoggingService}\n */\nexport function getLoggingService() {\n  if (!service) {\n    throw Error('You must first configure the logging service.');\n  }\n  return service;\n}\n\n/**\n * Sets the configured logging service back to null.\n *\n */\nexport function resetLoggingService() {\n  service = null;\n}\n\n/**\n * @name LoggingService\n * @interface\n * @memberof module:Logging\n * @property {function} logError\n * @property {function} logInfo\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAElC,IAAMC,YAAY,GAAG;EACnBC,MAAM,EAAEF,SAAS,CAACG,MAAM,CAACC;AAC3B,CAAC;AAED,IAAMC,YAAY,GAAG;EACnBC,OAAO,EAAEN,SAAS,CAACO,IAAI,CAACH,UAAU;EAClCI,QAAQ,EAAER,SAAS,CAACO,IAAI,CAACH;AAC3B,CAAC;AAED,IAAIK,OAAO,GAAG,IAAI;;AAElB;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,cAAc,EAAEC,OAAO,EAAE;EACjDZ,SAAS,CAACa,cAAc,CAACZ,YAAY,EAAEW,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC;EACtEH,OAAO,GAAG,IAAIE,cAAc,CAACC,OAAO,CAAC;EACrCZ,SAAS,CAACa,cAAc,CAACR,YAAY,EAAEI,OAAO,EAAE,UAAU,EAAE,gBAAgB,CAAC;EAC7E,OAAOA,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASH,OAAOA,CAACQ,uBAAuB,EAAEC,gBAAgB,EAAE;EACjE,OAAON,OAAO,CAACH,OAAO,CAACQ,uBAAuB,EAAEC,gBAAgB,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASP,QAAQA,CAACQ,mBAAmB,EAAED,gBAAgB,EAAE;EAC9D,OAAON,OAAO,CAACD,QAAQ,CAACQ,mBAAmB,EAAED,gBAAgB,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,kBAAkBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9C,OAAOV,OAAO,CAACQ,kBAAkB,CAACC,IAAI,EAAEC,KAAK,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAI,CAACX,OAAO,EAAE;IACZ,MAAMY,KAAK,CAAC,+CAA+C,CAAC;EAC9D;EACA,OAAOZ,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASa,mBAAmBA,CAAA,EAAG;EACpCb,OAAO,GAAG,IAAI;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}